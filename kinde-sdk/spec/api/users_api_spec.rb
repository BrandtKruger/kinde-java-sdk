=begin
#Kinde Management API

#Provides endpoints to manage your Kinde Businesses

The version of the OpenAPI document: 1
Contact: support@kinde.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for KindeSdk::UsersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @api_instance = KindeSdk::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@api_instance).to be_instance_of(KindeSdk::UsersApi)
    end
  end

  # unit tests for add_organization_users
  # Assign Users to an Organization
  # Add existing users to an organization.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :code The organization&#39;s code.
  # @option opts [AddOrganizationUsersRequest] :add_organization_users_request 
  # @return [AddOrganizationUsers200Response]
  describe 'add_organization_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_user
  # Create User
  # Creates a user record and optionally zero or more identities for the user. An example identity could be the email address of the user. 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateUserRequest] :create_user_request The details of the user to create.
  # @return [CreateUser200Response]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deleteuser
  # Delete User
  # Delete a user record. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id The user&#39;s id.
  # @return [SuccessResponse]
  describe 'deleteuser test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organization_users
  # List Organization Users
  # Get users in an organization.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort Field and order to sort the result by.
  # @option opts [Integer] :page_size Number of results per page. Defaults to 10 if parameter not sent.
  # @option opts [String] :next_token A string to get the next page of results if there are more results.
  # @option opts [String] :code The organization&#39;s code.
  # @return [GetOrganizationUsers200Response]
  describe 'get_organization_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_data
  # Get User
  # Retrieve a user record. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id The user&#39;s id.
  # @return [User]
  describe 'get_user_data test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users
  # List Users
  # The returned list can be sorted by full name or email address in ascending or descending order. The number of records to return at a time can also be controlled using the &#x60;page_size&#x60; query string parameter. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort Field and order to sort the result by.
  # @option opts [Integer] :page_size Number of results per page. Defaults to 10 if parameter not sent.
  # @option opts [String] :user_id ID of the user to filter by.
  # @option opts [String] :next_token A string to get the next page of results if there are more results.
  # @return [GetUsers200Response]
  describe 'get_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_organization_users
  # Remove Users from an Organization
  # Remove existing users from an organization.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :code The organization&#39;s code.
  # @option opts [RemoveOrganizationUsersRequest] :remove_organization_users_request 
  # @return [RemoveOrganizationUsers200Response]
  describe 'remove_organization_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user
  # Update User
  # Update a user record. 
  # @param update_user_request The user to update.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id The user&#39;s id.
  # @return [User]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
