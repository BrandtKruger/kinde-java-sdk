=begin
#Kinde Management API

#Provides endpoints to manage your Kinde Businesses

The version of the OpenAPI document: 1
Contact: support@kinde.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0

=end

require 'cgi'

module KindeApi
  class TimezonesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List timezones and timezone IDs.
    # Get a list of timezones and associated timezone keys.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :timezone_key Timezone Key.
    # @option opts [String] :name Timezone.
    # @return [SuccessResponse]
    def get_timezones(opts = {})
      data, _status_code, _headers = get_timezones_with_http_info(opts)
      data
    end

    # List timezones and timezone IDs.
    # Get a list of timezones and associated timezone keys.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :timezone_key Timezone Key.
    # @option opts [String] :name Timezone.
    # @return [Array<(SuccessResponse, Integer, Hash)>] SuccessResponse data, response status code and response headers
    def get_timezones_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TimezonesApi.get_timezones ...'
      end
      # resource path
      local_var_path = '/api/v1/timezones'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'timezone_key'] = opts[:'timezone_key'] if !opts[:'timezone_key'].nil?
      query_params[:'name'] = opts[:'name'] if !opts[:'name'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json; charset=utf-8'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'SuccessResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['kindeBearerAuth']

      new_options = opts.merge(
        :operation => :"TimezonesApi.get_timezones",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TimezonesApi#get_timezones\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
